[loggers]
keys=root

[handlers]
keys=consoleHandler, fileHandler, auditHandler

[formatters]
keys=simpleConsoleFormatter, verboseConsoleFormatter, gelfFormatter, jsonFormatter

[logger_root]
level=INFO
handlers=consoleHandler, fileHandler, auditHandler

[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=simpleConsoleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=st2common.log.FormatNamedFileHandler
level=INFO
formatter=verboseConsoleFormatter
args=('/var/log/st2/st2actionrunner.{pid}.log',)

[handler_auditHandler]
class=st2common.log.FormatNamedFileHandler
level=AUDIT
formatter=jsonFormatter
args=('/var/log/st2/st2actionrunner.{pid}.audit.log',)

[formatter_simpleConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(levelname)s [-] %(message)s
datefmt=

[formatter_verboseConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(thread)s %(levelname)s %(module)s [-] %(message)s
datefmt=

[formatter_gelfFormatter]
class=st2common.logging.formatters.GelfLogFormatter
format=%(message)s

[formatter_jsonFormatter]
class=pythonjsonlogger.jsonlogger.JsonFormatter
format=%(asctime) %(thread) %(levelname) %(module) %(message)
[loggers]
keys=root

[handlers]
keys=consoleHandler, fileHandler, auditHandler

[formatters]
keys=simpleConsoleFormatter, verboseConsoleFormatter, gelfFormatter

[logger_root]
level=INFO
handlers=consoleHandler, fileHandler, auditHandler

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleConsoleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=handlers.RotatingFileHandler
level=DEBUG
formatter=verboseConsoleFormatter
args=("/var/log/st2/st2api.log",)

[handler_auditHandler]
class=handlers.RotatingFileHandler
level=AUDIT
formatter=gelfFormatter
args=("/var/log/st2/st2api.audit.log",)

[formatter_simpleConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(levelname)s [-] %(message)s
datefmt=

[formatter_verboseConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(thread)s %(levelname)s %(module)s [-] %(message)s
datefmt=

[formatter_gelfFormatter]
class=st2common.logging.formatters.GelfLogFormatter
format=%(message)s
[loggers]
keys=root

[handlers]
keys=consoleHandler, fileHandler, auditHandler

[formatters]
keys=simpleConsoleFormatter, verboseConsoleFormatter, gelfFormatter

[logger_root]
level=INFO
handlers=consoleHandler, fileHandler, auditHandler

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleConsoleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=handlers.RotatingFileHandler
level=DEBUG
formatter=verboseConsoleFormatter
args=("/var/log/st2/st2auth.log",)

[handler_auditHandler]
class=handlers.RotatingFileHandler
level=AUDIT
formatter=gelfFormatter
args=("/var/log/st2/st2auth.audit.log",)

[formatter_simpleConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(levelname)s [-] %(message)s
datefmt=

[formatter_verboseConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(thread)s %(levelname)s %(module)s [-] %(message)s
datefmt=

[formatter_gelfFormatter]
class=st2common.logging.formatters.GelfLogFormatter
format=%(message)s
[loggers]
keys=root

[handlers]
keys=consoleHandler, fileHandler, auditHandler

[formatters]
keys=simpleConsoleFormatter, verboseConsoleFormatter, gelfFormatter

[logger_root]
level=INFO
handlers=consoleHandler, fileHandler, auditHandler

[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=simpleConsoleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=handlers.RotatingFileHandler
level=INFO
formatter=verboseConsoleFormatter
args=("/var/log/st2/st2garbagecollector.log",)

[handler_auditHandler]
class=handlers.RotatingFileHandler
level=AUDIT
formatter=gelfFormatter
args=("/var/log/st2/st2garbagecollector.audit.log",)

[formatter_simpleConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(levelname)s [-] %(message)s
datefmt=

[formatter_verboseConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(thread)s %(levelname)s %(module)s [-] %(message)s
datefmt=

[formatter_gelfFormatter]
class=st2common.logging.formatters.GelfLogFormatter
format=%(message)s
[loggers]
keys=root

[handlers]
keys=consoleHandler, fileHandler, auditHandler

[formatters]
keys=simpleConsoleFormatter, verboseConsoleFormatter, gelfFormatter

[logger_root]
level=INFO
handlers=consoleHandler, fileHandler, auditHandler

[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=simpleConsoleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=st2common.log.FormatNamedFileHandler
level=DEBUG
formatter=verboseConsoleFormatter
args=('/var/log/st2/st2notifier.log',)

[handler_auditHandler]
class=st2common.log.FormatNamedFileHandler
level=AUDIT
formatter=gelfFormatter
args=('/var/log/st2/st2notifier.audit.log',)

[formatter_simpleConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(levelname)s [-] %(message)s
datefmt=

[formatter_verboseConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(thread)s %(levelname)s %(module)s [-] %(message)s
datefmt=

[formatter_gelfFormatter]
class=st2common.logging.formatters.GelfLogFormatter
format=%(message)s
[loggers]
keys=root

[handlers]
keys=consoleHandler, fileHandler, auditHandler

[formatters]
keys=simpleConsoleFormatter, verboseConsoleFormatter, gelfFormatter

[logger_root]
level=INFO
handlers=consoleHandler, fileHandler, auditHandler

[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=simpleConsoleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=st2common.log.FormatNamedFileHandler
level=DEBUG
formatter=verboseConsoleFormatter
args=('/var/log/st2/st2resultstracker.log',)

[handler_auditHandler]
class=st2common.log.FormatNamedFileHandler
level=AUDIT
formatter=gelfFormatter
args=('/var/log/st2/st2resultstracker.audit.log',)

[formatter_simpleConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(levelname)s [-] %(message)s
datefmt=

[formatter_verboseConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(thread)s %(levelname)s %(module)s [-] %(message)s
datefmt=

[formatter_gelfFormatter]
class=st2common.logging.formatters.GelfLogFormatter
format=%(message)s
[loggers]
keys=root

[handlers]
keys=consoleHandler, fileHandler, auditHandler

[formatters]
keys=simpleConsoleFormatter, verboseConsoleFormatter, gelfFormatter

[logger_root]
level=INFO
handlers=consoleHandler, fileHandler, auditHandler

[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=simpleConsoleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=handlers.RotatingFileHandler
level=INFO
formatter=verboseConsoleFormatter
args=("/var/log/st2/st2rulesengine.log",)

[handler_auditHandler]
class=handlers.RotatingFileHandler
level=AUDIT
formatter=gelfFormatter
args=("/var/log/st2/st2rulesengine.audit.log",)

[formatter_simpleConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(levelname)s [-] %(message)s
datefmt=

[formatter_verboseConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(thread)s %(levelname)s %(module)s [-] %(message)s
datefmt=

[formatter_gelfFormatter]
class=st2common.logging.formatters.GelfLogFormatter
format=%(message)s
[loggers]
keys=root

[handlers]
keys=consoleHandler, fileHandler, auditHandler

[formatters]
keys=simpleConsoleFormatter, verboseConsoleFormatter, gelfFormatter

[logger_root]
level=INFO
handlers=consoleHandler, fileHandler, auditHandler

[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=simpleConsoleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=handlers.RotatingFileHandler
level=INFO
formatter=verboseConsoleFormatter
args=("/var/log/st2/st2sensorcontainer.log",)

[handler_auditHandler]
class=handlers.RotatingFileHandler
level=AUDIT
formatter=gelfFormatter
args=("/var/log/st2/st2sensorcontainer.audit.log",)

[formatter_simpleConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(levelname)s [-] %(message)s
datefmt=

[formatter_verboseConsoleFormatter]
class=st2common.logging.formatters.ConsoleLogFormatter
format=%(asctime)s %(thread)s %(levelname)s %(module)s [-] %(message)s
datefmt=

[formatter_gelfFormatter]
class=st2common.logging.formatters.GelfLogFormatter
format=%(message)s
# System-wide configuration

[api]
# Host and port to bind the API server.
host = 0.0.0.0
port = 9101
logging = /etc/st2/logging.api.conf
mask_secrets = True
# allow_origin is required for handling CORS in st2 web UI.
# allow_origin = http://myhost1.example.com:3000,http://myhost2.example.com:3000

[sensorcontainer]
logging = /etc/st2/logging.sensorcontainer.conf

[rulesengine]
logging = /etc/st2/logging.rulesengine.conf

[actionrunner]
logging = /etc/st2/logging.actionrunner.conf
virtualenv_opts = --always-copy

[resultstracker]
logging = /etc/st2/logging.resultstracker.conf

[notifier]
logging = /etc/st2/logging.notifier.conf

[exporter]
logging = /etc/st2/logging.exporter.conf

[garbagecollector]
logging = /etc/st2/logging.garbagecollector.conf

[auth]
host = 0.0.0.0
port = 9100
use_ssl = False
debug = False
enable = False
logging = /etc/st2/logging.auth.conf

mode = standalone

# Note: Settings bellow are only used in "standalone" mode
backend = flat_file
backend_kwargs = {"file_path": "/etc/st2/htpasswd"}

# Base URL to the API endpoint excluding the version (e.g. http://myhost.net:9101/)
api_url =

[system]
base_path = /opt/stackstorm

[syslog]
host = localhost
port = 514
facility = local7
protocol = udp

[log]
excludes = requests,paramiko
redirect_stderr = False
mask_secrets = True

[system_user]
user = stanley
ssh_key_file = /home/stanley/.ssh/stanley_rsa

[messaging]
url = amqp://guest:guest@localhost:5672/

[ssh_runner]
remote_dir = /tmp
use_paramiko_ssh_runner = True
[loggers]
keys=root

[handlers]
keys=syslogHandler, auditHandler

[formatters]
keys=syslogVerboseFormatter, jsonFormatter

[logger_root]
level=INFO
handlers=syslogHandler, auditHandler

[handler_syslogHandler]
class=st2common.log.ConfigurableSyslogHandler
level=INFO
formatter=syslogVerboseFormatter
args=()

[handler_auditHandler]
class=st2common.log.FormatNamedFileHandler
level=AUDIT
formatter=jsonFormatter
args=('logs/st2actionrunner.{pid}.audit.log',)

[formatter_syslogVerboseFormatter]
format=st2actions[%(process)d]: %(levelname)s %(thread)s %(module)s [-] %(message)s
datefmt=

[formatter_jsonFormatter]
class=pythonjsonlogger.jsonlogger.JsonFormatter
format=%(asctime) %(thread) %(levelname) %(module) %(message)
[loggers]
keys=root

[handlers]
keys=syslogHandler

[formatters]
keys=syslogVerboseFormatter

[logger_root]
level=INFO
handlers=syslogHandler

[handler_syslogHandler]
class=st2common.log.ConfigurableSyslogHandler
level=DEBUG
formatter=syslogVerboseFormatter
args=()

[formatter_syslogVerboseFormatter]
format=st2api[%(process)d]: %(levelname)s %(thread)s [-] %(message)s
datefmt=
[loggers]
keys=root

[handlers]
keys=syslogHandler

[formatters]
keys=syslogVerboseFormatter

[logger_root]
level=INFO
handlers=syslogHandler

[handler_syslogHandler]
class=st2common.log.ConfigurableSyslogHandler
level=DEBUG
formatter=syslogVerboseFormatter
args=()

[formatter_syslogVerboseFormatter]
format=st2auth[%(process)d]: %(levelname)s %(thread)s %(module)s [-] %(message)s
datefmt=
[loggers]
keys=root

[handlers]
keys=syslogHandler

[formatters]
keys=syslogVerboseFormatter

[logger_root]
level=INFO
handlers=syslogHandler

[handler_syslogHandler]
class=st2common.log.ConfigurableSyslogHandler
level=DEBUG
formatter=syslogVerboseFormatter
args=()

[formatter_syslogVerboseFormatter]
format=st2garbagecollector[%(process)d]: %(levelname)s %(thread)s %(module)s [-] %(message)s
datefmt=
[loggers]
keys=root

[handlers]
keys=syslogHandler

[formatters]
keys=syslogVerboseFormatter

[logger_root]
level=INFO
handlers=syslogHandler

[handler_syslogHandler]
class=st2common.log.ConfigurableSyslogHandler
level=DEBUG
formatter=syslogVerboseFormatter
args=()

[formatter_syslogVerboseFormatter]
format=st2notifier[%(process)d]: %(levelname)s %(thread)s %(module)s [-] %(message)s
datefmt=
[loggers]
keys=root

[handlers]
keys=syslogHandler

[formatters]
keys=syslogVerboseFormatter

[logger_root]
level=INFO
handlers=syslogHandler

[handler_syslogHandler]
class=st2common.log.ConfigurableSyslogHandler
level=DEBUG
formatter=syslogVerboseFormatter
args=()

[formatter_syslogVerboseFormatter]
format=st2resultstracker[%(process)d]: %(levelname)s %(thread)s %(module)s [-] %(message)s
datefmt=
[loggers]
keys=root

[handlers]
keys=syslogHandler

[formatters]
keys=syslogVerboseFormatter

[logger_root]
level=INFO
handlers=syslogHandler

[handler_syslogHandler]
class=st2common.log.ConfigurableSyslogHandler
level=DEBUG
formatter=syslogVerboseFormatter
args=()

[formatter_syslogVerboseFormatter]
format=st2rulesengine[%(process)d]: %(levelname)s %(thread)s %(module)s [-] %(message)s
datefmt=
[loggers]
keys=root

[handlers]
keys=syslogHandler

[formatters]
keys=syslogVerboseFormatter

[logger_root]
level=INFO
handlers=syslogHandler

[handler_syslogHandler]
class=st2common.log.ConfigurableSyslogHandler
level=DEBUG
formatter=syslogVerboseFormatter
args=()

[formatter_syslogVerboseFormatter]
format=st2sensorcontainer[%(process)d]: %(levelname)s %(thread)s %(module)s [-] %(message)s
datefmt=
